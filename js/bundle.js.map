{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,gEAAgE;AAChE;;AAEA;AACA,gEAAgE;AAChE,4EAA4E;AAC5E,wEAAwE;AACxE;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,oEAAoE;AACpE;AACA,oEAAoE;AACpE;;AAEA;AACA,gHAAgH;AAChH,UAAU;AACV;AACA;AACA;;AAEA;;AAEA,qEAAqE;AACrE,kEAAkE;;AAElE;AACA,0DAA0D;AAC1D,oEAAoE;AACpE,oEAAoE;AACpE,0FAA0F;AAC1F,kBAAkB;AAClB,oEAAoE;AACpE;AACA;AACA;AACA,oEAAoE;AACpE;AACA,iBAAiB;AACjB;AACA,oEAAoE;AACpE;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA,gFAAgF;AAChF,iGAAiG;;AAEjG,gEAAgE;AAChE;;AAEA,gEAAgE;;AAEhE,iEAAiE;AACjE,iEAAiE;AACjE,cAAc;AACd,iEAAiE;AACjE;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;;AC5GgC;;AAEnD;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA,cAAc;AACd,4EAA4E;AAC5E;;AAEA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;;AAEA,IAAI,+DAAW;AACf;AACA,2BAA2B,iCAAiC,UAAU;AACtE,gGAAgG;AAChG,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK,MAAM,OAAO;AACzC,8CAA8C,MAAM;AACpD,4CAA4C,MAAM;AAClD;AACA;AACA;AACA,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3E4B;AACA;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,wCAAwC;AACxC,qDAAqD;AACrD;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uEAAuE;;AAEvE,oDAAoD;;AAEpD,oFAAoF;;AAEpF,YAAY,4DAAQ;AACpB,8BAA8B;AAC9B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA,+CAA+C;AAC/C;;AAEA;AACA,QAAQ,iDAAS;;AAEjB;AACA;AACA;AACA;AACA,oDAAoD;AACpD,oCAAoC,QAAQ;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3EpB;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,iDAAiD;AACjD;AACA;AACA;AACA,KAAK;;AAEL,sDAAsD;AACtD;AACA;AACA;AACA,KAAK;;;AAGL,qCAAqC;AACrC;AACA;AACA,qEAAqE;AACrE;AACA;;AAEA;AACA;;AAEA,iEAAe,KAAK,EAAC;AACF;;;;;;;;;;;;;;;ACjDnB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;;AAElE,wBAAwB;AACxB,wBAAwB;;AAExB,iCAAiC;AACjC,4BAA4B,cAAc;AAC1C,8BAA8B,WAAW;AACzC,EAAE;AACF;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA,gDAAgD;;AAEhD,4CAA4C;;AAE5C,gCAAgC;AAChC;AACA,CAAC;;AAED,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAmB,aAAa;AAChD;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA,CAAC;AACD;AACA;;AAEA,oCAAoC;AACpC;AACA,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;;AAEA,wCAAwC;AACxC,iDAAiD,OAAO;AACxD;;AAEA,uCAAuC;AACvC;AACA;;AAEA;AACA,iEAAiE;AACjE;AACA,MAAM;AACN,8CAA8C;AAC9C;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oCAAoC;AACpC;AACA;;AAEA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;;AAGA,+BAA+B;;AAE/B,mCAAmC;;AAEnC,wCAAwC;AACxC,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;;AAEA,mCAAmC;AACnC,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;;AAEZ;;AAEA,4CAA4C;AAC5C,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;;AAEA,mDAAmD;AACnD;AACA,QAAQ;;AAER,mDAAmD;AACnD;AACA,QAAQ;AACR;;AAEA,iEAAe,MAAM;;;;;;;;;;;;;;AC3MrB;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA,SAAS;;AAET,iCAAiC;AACjC;AACA,SAAS;AACT;;AAEA,sCAAsC;AACtC;AACA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA,mDAAmD;AACnD;;AAEA,gFAAgF;AAChF,wCAAwC;AACxC,uCAAuC;AACvC,sCAAsC;AACtC,uCAAuC;AACvC;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;ACrCnB;;AAEA,wCAAwC;AACxC,gEAAgE;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;AClEpB,2CAA2C;AAC3C,0CAA0C;AAC1C;AACA;AACA,+CAA+C;AAC/C,SAAS;AACT;AACA,KAAK;AACL,kCAAkC;AAClC;;AAEA,uCAAuC;AACvC;;AAEA,wBAAwB;AACxB,2CAA2C,IAAI,WAAW,WAAW,OAAO;AAC5E;;AAEA;AACA;;AAEkB;AACG;;;;;;;;UCtBrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACA;AACE;AACJ;AACQ;;AAE1C;;AAEA,0CAA0C,yDAAS,mCAAmC;;AAEtF,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC","sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/script.js"],"sourcesContent":["function calc() {\n    const result = document.querySelector('.calculating__result span');\n    let sex, height, weight, age, ratio;\n\n    if (localStorage.getItem('sex')) {\n        sex = localStorage.getItem('sex');\n    } else {\n        sex = 'woman';\n        localStorage.setItem('sex', 'woman');\n    }\n\n    if (localStorage.getItem('ratio')) {\n        ratio = localStorage.getItem('ratio');\n    } else {\n        ratio = 1.375;\n        localStorage.setItem('ratio', 1.375);\n    }\n\n    function initLocalSettings (selector, activeClass) {        // для переключения класса активности, если пользователь выбрал определенные данные и обновил или закрыл страницу (данные остаются, так как лежат в локалстораже)\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {                          \n            elem.classList.remove(activeClass);                 // удаляем класс активности везде\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {  // если у элемента уникальный идентификатор такой же, какой прописан в localStorage, то\n                elem.classList.add(activeClass);                        // добавляем класс активности\n            }\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\n                elem.classList.add(activeClass);\n            }\n        });\n    };\n\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function calcTotal () {\n        if (!sex || !height || !weight || !age || !ratio) {         // тут проверяем, чтобы все данные были заполнены\n            result.textContent = '____';\n            return;                                                 // для того, чтобы прервать функцию, если выше будет false\n        } \n\n        if (sex === 'woman') {\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);   // Math.round – округление до целого числа\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n    };\n\n    calcTotal();\n\n    function getStaticInformation (selector, activeClass) {          // получаем информацию с 1 и 3 строки калькулятора. parentSelector – это или гендор или уровень активности\n        const elements = document.querySelectorAll(selector);     // всех дивы в родителе\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => {       // делегирование события\n                if (e.target.getAttribute('data-ratio')) {          // если кликнули на на див, в котором есть дата-атрибут\n                    ratio = +e.target.getAttribute('data-ratio');   // то вытаскиваем значение этого дата-атрибута\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));  // записываем в локальное хранилище то, что выбрал пользователь\n                } else {\n                    sex = e.target.getAttribute('id');              // иначе назначаем пол через id идентификатор\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\n                }\n    \n                elements.forEach(item => {                          // удаление класса активности у всех элементов\n                    item.classList.remove(activeClass);\n                });\n    \n                e.target.classList.add(activeClass);                // назначаем класс активности на тот див, на который кликнули\n    \n                calcTotal();\n            });\n        });\n    };\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active');     // функия для выбора гендера\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');     // функция для выбора уровня активности\n\n    function getDynamicInformation (selector) {                 // фунция для работы со второй строкой калькулятора (вес, рост и возраст). selector – это тот див, на который мы кликаем \n        const input = document.querySelector(selector);\n\n        input.addEventListener('input', () => {                 // отслеживаем, что пишет пользователь в инпуте\n\n            if (input.value.match(/\\D/g)){                       // если инпут не число, то\n                input.style.border = '1px solid red';            // делаем красную обводку\n            } else {\n                input.style.border = 'none';                     // тут убираем \n            }\n\n            switch(input.getAttribute('id')) {                  // проверяем инупты по id идентификатору\n                case 'height':                                  // если пишет в height, то и записывать будем в height и т.д\n                    height = +input.value;\n                    break;\n                case 'weight':\n                    weight = +input.value;\n                    break;\n                case 'age':\n                    age = +input.value;\n                    break;\n            }\n            calcTotal();\n        });\n    };\n\n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n}\n\nexport default calc;","import { getResource } from \"../services/services\";\n\nfunction cards() {\n    class MenuCard {\n        constructor (src, alt, title, descr, price, parentSelector, ...classes) {  // ...classes – оператор rest\n            this.src = src;\n            this.alt = alt; \n            this.title = title;\n            this.descr = descr;\n            this.price = price;\n            this.classes = classes;\n            this.parent = document.querySelector(parentSelector);  // родитель карточек меню\n            this.transfer = 27;     // доллар\n            this.changeToUAH();     // для перевода в гривны\n        }\n        changeToUAH() {\n            this.price = this.price * this.transfer;\n        }\n        render() {              // создаём див, в котором будет лежать карточка с меню\n            const element = document.createElement('div');\n\n            if(this.classes.length === 0) {\n                this.element = 'menu__item';\n                element.classList.add(this.element);\n            } else {\n                this.classes.forEach(item => element.classList.add(item));  //перебираем массив с новыми классами и добавляем их в див елемент\n            }\n\n            element.innerHTML = `\n                <img src=${this.src} alt=${this.alt}>\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                <div class=\"menu__item-descr\">${this.descr}</div>\n                <div class=\"menu__item-divider\"></div>\n                <div class=\"menu__item-price\">\n                    <div class=\"menu__item-cost\">Цена:</div>\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                </div>\n            `;\n            this.parent.append(element);\n        }\n    }\n\n    getResource('http://localhost:3000/menu')   // собираем с сервера данные и формируем карточки с меню\n        .then(data => {\n            data.forEach(({img, altimg, title, descr, price}) => {    // деструктуризировали объект меню\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();    // '.menu .container' – родитель, куда поместим карточки\n            });\n        });\n\n// создадим карточки с меню без конструктора с классами\n//  getResource('http://localhost:3000/menu')\n//    .then (data => createCard(data));\n//\n//  function createCard(data) {\n//      data.forEach(({img, altimg, title, descr, price}) => {\n//          const element = document.createElement('div');\n//\n//      element.classList.add('menu__item');\n//\n//      element.innerHTML = `\n//          <img src=${img} alt=${altimg}>\n//          <h3 class=\"menu__item-subtitle\">${title}</h3>\n//          <div class=\"menu__item-descr\">${descr}</div>\n//          <div class=\"menu__item-divider\"></div>\n//          <div class=\"menu__item-price\">\n//              <div class=\"menu__item-cost\">Цена:</div>\n//              <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\n//          </div>\n//      `;\n//      \n//      document.querySelector('.menu .container').append(element);\n//    });\n//  }\n}\n\nexport default cards;","import { openModal, closeModal } from \"./modal\";\nimport { postData } from \"../services/services\";\n\nfunction forms(formSelector, modalTimerId){\n    const forms = document.querySelectorAll(formSelector);\n\n    const message = {\n          loading: 'img/form/spinner.svg', \n          success: 'Спасибо! Скоро мы с вами свяжемся!', \n          failure: 'Что-то пошло не так...'\n    };\n\n    forms.forEach(item => {\n        bindPostData(item);\n    });\n\n    function bindPostData(form) {       // функция по отправке формы\n        form.addEventListener('submit', (e) => {     // событие по отправке формы в обычном формате\n            e.preventDefault();\n\n            let statusMessage = document.createElement('img');  \n            statusMessage.src = message.loading;    // подгружается картинка\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            form.insertAdjacentElement('afterend', statusMessage);     // добавляем к форме сообщение\n\n            const formData = new FormData(form);    // собираем все данные из формы\n\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));    // преобразование в json формат данных с формы\n\n            postData('http://localhost:3000/requests', json)  \n            .then(data => {   // с сервера возвращается какая-то дейта \n                console.log(data);\n                showThanksModal(message.success);\n                statusMessage.remove();\n            })\n            .catch(() => {\n                showThanksModal(message.failure);\n            })\n            .finally(() => {\n                form.reset();\n            })\n        });\n    }\n\n    function showThanksModal (message) {       // создаём модальное окно с благодарностью после отправки данные в форме\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.style.display = 'none';\n        openModal('.modal', modalTimerId);\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n        <div class=\"modal__content\">\n        <div data-close class=\"modal__close\">&times;</div>\n        <div class=\"modal__title\">${message}</div>\n        </div>\n        `;\n        document.querySelector('.modal').append(thanksModal);\n\n        setTimeout (() => {\n            thanksModal.remove();\n            prevModalDialog.style.display = 'block';\n            closeModal('.modal');\n        }, 4000);\n    }\n\n    fetch('http://localhost:3000/menu')     // работа с базой данных db.json \n    .then(data => data.json())\n    .then(res => console.log(res));\n}\n\nexport default forms;","function openModal (modalSelector, modalTimerId) {\n    const modal = document.querySelector(modalSelector);\n    modal.style.display = 'block';\n    document.body.style.overflow = 'hidden'; // чтобы не было прокрутки у модального окна.\n\n    if (modalTimerId) {\n        clearInterval(modalTimerId);\n    }\n};\n\nfunction closeModal(modalSelector) {\n    const modal = document.querySelector(modalSelector);\n    modal.style.display = 'none';\n    document.body.style.overflow = '';\n};\n\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\n    const modalTrigger = document.querySelectorAll(triggerSelector),\n          modal = document.querySelector(modalSelector);\n\n    modalTrigger.forEach(item => {\n        item.addEventListener('click', () => openModal(modalSelector, modalTimerId));     \n    });\n\n    \n    modal.addEventListener('click', (e) => {     // закрываем модальное окно\n        if(e.target === modal || e.target.getAttribute('data-close') == '') {\n            closeModal(modalSelector)\n        }\n    });\n\n    document.addEventListener('keydown', (e) => {     // закрываем модальное окно нажатием на кнопку клавиатуры\n        if (e.code === 'Escape') {\n            closeModal(modalSelector)\n        }\n    });\n\n\n    function showModalByScroll () {  // вызываем модальное окно, когда доскроллили в самый низ\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModal(modalSelector, modalTimerId);\n            window.removeEventListener('scroll', showModalByScroll); // удали эту функцию, когда показал один раз\n        } \n    };\n\n    window.addEventListener('scroll', showModalByScroll);\n}\n\nexport default modal;\nexport {openModal};\nexport {closeModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\n    const slides = document.querySelectorAll(slide), \n          slider = document.querySelector(container),  \n          prev = document.querySelector(prevArrow),\n          next = document.querySelector(nextArrow), \n          current = document.querySelector(currentCounter),\n          total = document.querySelector(totalCounter), \n          slidesWrapper = document.querySelector(wrapper), \n          slidesField = document.querySelector(field), \n          width = window.getComputedStyle(slidesWrapper).width;   // ширина окна слайда \n\nlet slideIndex = 1;     // индекс (номер) слайда\nlet offset = 0;         // сколько нужно отступить при смещении слайда\n\nif (slides.length < 10) {        // кол-во всех слайдов\n    total.textContent = `0${slides.length}`;\n    current.textContent = `0${slideIndex}`;\n} else {\n    total.textContent = slides.length;\n    current.textContent = slideIndex;\n}\n\nslidesField.style.width = 100 * slides.length + '%';        // ширина всех слайдов. они будут стоять в одной линии, но показываться будет только один\nslidesField.style.display = 'flex';\nslidesField.style.transition = '0.5s all';      // слайды перемещаются плавно \n\nslidesWrapper.style.overflow = 'hidden';    // скрыли все элементы, которые за шириной окна слайда\n\nslides.forEach(slide => {       // ширина всех слайдов в линии\n    slide.style.width = width;\n});\n\nslider.style.position = 'relative';     // для того, чтобы все элементы, которые будут абсолютно спозиционированны внутри слайдера, нормально отображались\n\nconst indicators = document.createElement('ol'),      // обертка для точек для слайдера\n    dots = [];\n\nindicators.style.cssText = `\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 15;\n    display: flex;\n    justify-content: center;\n    margin-right: 15%;\n    margin-left: 15%;\n    list-style: none;\n`;\nslider.append(indicators);\n\nfor (let i = 0; i < slides.length; i++) {       // создаём точки\n    const dot = document.createElement('li');\n    dot.setAttribute('data-slide-to', i + 1);         // устанавливаем атрибует 'data-slide-to' к каждой точке. 'i + 1' – нумерация точек (первый слайд == первая точка)\n    dot.style.cssText = `\n        box-sizing: content-box;\n        flex: 0 1 auto;\n        width: 30px;\n        height: 6px;\n        margin-right: 3px;\n        margin-left: 3px;\n        cursor: pointer;\n        background-color: #fff;\n        background-clip: padding-box;\n        border-top: 10px solid transparent;\n        border-bottom: 10px solid transparent;\n        opacity: .5;\n        transition: opacity .6s ease;\n    `;\n    if (i == 0) {\n        dot.style.opacity = 1;\n    }\n    indicators.append(dot);\n    dots.push(dot);\n    };\n\nfunction doActiveDot () {       // точка становится активной при перелистывании слайда\n    dots.forEach(item => {              \n    item.style.opacity = '.5';\n});\n    dots[slideIndex - 1].style.opacity = '1';\n};\n\nfunction addZeroToNumber () {       // добавляем 0 к однозначным числам\n    if (slides.length < 10) {\n        current.textContent = `0${slideIndex}`;\n    } else {\n        current.textContent = slideIndex;\n    }\n};\n\nfunction shiftSlidesToLeft () {         //смещение линии со слайдами влево \n    slidesField.style.transform = `translateX(-${offset}px)`;\n};\n\nfunction removeNotNumber (str) {       // удаляем не числа + делаем из строки число\n    return +str.replace(/\\D/g, '')\n};\n\nnext.addEventListener('click', () => {\n    if (offset == removeNotNumber(width) * (slides.length -1)) { // ширина слайда * на все слайды минус 1. width.replace(/\\D/g, '') – все не числа убираем. унарным плюсом (+width), превращаем строку в число \n        offset = 0;\n    } else {\n        offset += removeNotNumber(width);     // к видимому слайду добаили ширину нового слайда, тем самым вытеснив видимый влево\n    }\n\n    shiftSlidesToLeft ();\n\n    if (slideIndex == slides.length) {\n        slideIndex = 1;\n    } else {\n        slideIndex++;\n    }\n\n    addZeroToNumber ();\n    doActiveDot();\n});\n\nprev.addEventListener('click', () => {\n    if (offset == 0) { \n        offset = removeNotNumber(width) * (slides.length -1);\n    } else {\n        offset -= removeNotNumber(width);   \n    }\n\n    shiftSlidesToLeft ();\n\n    if (slideIndex == 1) {\n        slideIndex = slides.length;\n    } else {\n        slideIndex--;\n    }\n\n    addZeroToNumber ();\n    doActiveDot();\n});\n\ndots.forEach(item => {              // кликаем на любую точку -> открываем слайд подходящий к этой точке\n    item.addEventListener('click', (e) => {\n        const slideTo = e.target.getAttribute('data-slide-to');\n\n        slideIndex = slideTo;       // кликнули на 3ю точку, открылся 3й слайд\n        offset = removeNotNumber(width) * (slideTo -1);\n\n        shiftSlidesToLeft ();\n        addZeroToNumber ();\n        doActiveDot();\n    });\n});\n\n// Создаём простой слайдер\n    // const slides = document.querySelectorAll('.offer__slide'),\n    //       prev = document.querySelector('.offer__slider-prev'),\n    //       next = document.querySelector('.offer__slider-next'), \n    //       current = document.querySelector('#current'),\n    //       total = document.querySelector('#total');\n\n\n    // let slideIndex = 1;     // индекс (номер) слайда\n\n    // showSlides(slideIndex);     // как изначально будет выглядеть слайдер\n\n    // if (slides.length < 10) {        // кол-во всех слайдов\n    //     total.textContent = `0${slides.length}`;\n    // } else {\n    //     total.textContent = slides.length;\n    // }\n\n    // function showSlides (n) {   // n – slideIndex\n    //     if (n > slides.length) {      // slides.length – это сколько всего у нас слайдов\n    //         slideIndex = 1;\n    //     }\n\n    //     if (n < 1) {\n    //         slideIndex = slides.length; \n    //     }\n\n    //     slides.forEach(slide => {\n    //         slide.style.display = 'none';\n    //     })\n\n    //     slides[slideIndex -1].style.display = 'block';\n\n    //     if (slides.length < 10) {        // изменение номера текущего слайда\n    //         current.textContent = `0${slideIndex}`;\n    //     } else {\n    //         current.textContent = slideIndex;\n    //     }\n    // };\n\n    // function plusSlides (n) {       // переключение слайдов \n    //     showSlides(slideIndex += n);\n    // }\n\n    // prev.addEventListener('click', () => {      // клик на стрелку назад\n    //     plusSlides(-1);\n    // });\n\n    // next.addEventListener('click', () => {      // клик на стрелку вперед\n    //     plusSlides(1);\n    // });\n}\n\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\n    const tabs = document.querySelectorAll(tabsSelector),\n          tabsContent = document.querySelectorAll(tabsContentSelector),\n          tabsParent = document.querySelector(tabsParentSelector);\n\n    function hideTabContent () {   // скрываем все не нужные пока табы\n        tabsContent.forEach(item => {\n            item.style.display = 'none';\n        });\n\n        tabs.forEach(item => {   // удаляем класс активности, когда скрываем не нужные табы\n            item.classList.remove(activeClass);\n        });\n    }\n\n    function showTabContent (i = 0) { // показываем нужный нам таб. i = 0 – это дефолтный показ первого слайда, если при вызове функции не передаём аргумент\n        tabsContent[i].style.display = 'block';\n        tabs[i].classList.add(activeClass);  // добавляем класс активности\n    }\n\n    hideTabContent();\n    showTabContent();\n\n    tabsParent.addEventListener('click', (e) => {  // создаём делегирование события \n        const target = e.target;\n\n        if (target && target.classList.contains(tabsSelector.slice(1))) {       // tabsSelector.slice(1) – удаление точки перед селектором, иначе будет ошибка \n            tabs.forEach((item, i) => { // i - номер элемента по порядку\n                if (target == item ) { // если таргет будет совпадать с элементом, который мы сейчас перебираем\n                    hideTabContent(); // то скрываем те табы, которые не нужны\n                    showTabContent(i); // и показываем тот, который нужен. i – это таб по порядку (на который кликнули)\n                }\n            });\n        }\n    }); \n}\n\nexport default tabs;","function timer(id, deadline){\n\n    function getTimeRemaning(endtime) { // получаем разницу между датами: дедлйан и сегодняшний день\n        const t = Date.parse(endtime) - Date.parse(new Date()); // в переменную t получаем разницу между дедлайном и сегодняшней датой\n        let days,\n            hours,\n            minutes,\n            seconds;\n\n            if (t <= 0) {\n                days = 0;\n                hours = 0,\n                minutes = 0,\n                seconds = 0;\n            } else {\n                days = Math.floor(t / (1000 * 60 * 60 * 24)),  // 1000 мс * на минуту * на час * на сутки = сколько суток до дедлайна. Math.floor() – округление до целого\n                hours = Math.floor((t / (1000 * 60 * 60) % 24)),  // 1000 мс * на минуту * на час = сколько часов до дедлайна. % 24 – это деление часов до дедлайн на 24 и возвращения остатка\n                minutes = Math.floor((t / (1000 * 60) % 60)),\n                seconds = Math.floor((t / 1000) % 60);\n            };\n\n\n        return {\n            'total': t,    // общее кол-во миллисекунд\n            'days': days,\n            'hours': hours, \n            'minutes': minutes,\n            'seconds': seconds\n        };\n    }\n\n    function getZero (num) {   // будет добавлять 0 к цифрам меньше 10\n        if (num >= 0 && num < 10) {\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    function setClock (selector, endtime) {   // устанавливаем таймер на страницу\n        const timer = document.querySelector(selector),\n              days = timer.querySelector('#days'),\n              hours = timer.querySelector('#hours'),\n              minutes = timer.querySelector('#minutes'),\n              seconds = timer.querySelector('#seconds'), \n              timeInterval = setInterval(updateClock, 1000); \n\n        updateClock(); // запуск функции в ручную решит проблему с задеркой на секунду в обновлении страницы\n\n    function updateClock () {   // меняет по секундно таймер\n        const t = getTimeRemaning(endtime);\n\n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            if (t.total <= 0) {\n                clearInterval(timeInterval);\n            }\n        }\n    }\n\n    setClock(id, deadline);\n}\n\nexport default timer;","const postData = async (url, data) => {    // настраивает запрос на отпрвку данных на сервер. async - предупреждение, что дальше будет асинхронный код\n    let res = await fetch(url, {          // await – позволяет подождать, пока выполнится код и только после пойдёт дальше\n        method: \"POST\", \n        headers: {\n            'Content-type': 'application/json; charset=utf-8'\n        },\n        body: data\n    });\n    return await res.json();      // возвращаем промис\n};\n\nconst getResource = async (url) => {   // настраиваем сбор данных с сервера (db.json), чтобы создать карточки с меню\n    let res = await fetch(url);\n\n    if (!res.ok) {      // если результат не ок, то\n        throw new Error(`Could not fetch ${url}, status ${res.status}`);    // выдаём ошибку\n    }\n\n    return await res.json();     \n};\n\nexport {postData};\nexport {getResource};\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\nimport cards from './modules/cards';\nimport timer from './modules/timer';\nimport modal from './modules/modal';\nimport forms from './modules/forms';\nimport slider from './modules/slider';\nimport calc from './modules/calc';\nimport {openModal} from './modules/modal';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);  // вызываем модальное окно через какое-то время\n\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    cards();\n    timer('.timer', '2024-06-15');\n    modal('[data-modal]', '.modal', modalTimerId);\n    forms('form', modalTimerId);\n    calc();\n    slider({\n        container: '.offer__slider',\n        slide: '.offer__slide', \n        nextArrow: '.offer__slider-next', \n        prevArrow: '.offer__slider-prev', \n        totalCounter: '#total', \n        currentCounter: '#current', \n        wrapper: '.offer__slider-wrapper',\n        field: '.offer__slider-inner'\n    });\n});\n"],"names":[],"sourceRoot":""}